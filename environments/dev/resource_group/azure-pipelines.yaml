trigger:
  branches:
    include:
      - master

pool: mammal

variables:
  - group: AZURE
  - name: workingDirectory
    value: '$(System.DefaultWorkingDirectory)/bp-itinfra-terraform-azure-project/environments/dev/vnet/'
  - name: azureLocation
    value: 'East US'

parameters:
  - name: Plan
    type: boolean
    default: true
  - name: Apply
    type: boolean
    default: false
  - name: Destroy
    type: boolean
    default: false
  - name: tags
    type: object
    default:
      Owner: ""
      Environment: ""
      Terraform: ""

stages:
  - stage: plan
    displayName: 'Terraform Init, Validate and Plan'
    condition: eq('${{ parameters.Plan }}', 'true')
    jobs:
      - deployment: plan
        displayName: 'Run Terraform Plan'
        environment: DEV
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  persistCredentials: true
                  fetchDepth: 1

                - task: TerraformTaskV4@4
                  displayName: 'Terraform Init'
                  inputs:
                    provider: 'azurerm'
                    command: 'Terraform init'
                    workingDirectory: $(workingDirectory)

                - task: TerraformTaskV4@4
                  displayName: 'Terraform Validate'
                  inputs:
                    provider: 'azurerm'
                    command: 'validate'
                    workingDirectory: $(workingDirectory)

                - task: TerraformTaskV4@4
                  displayName: 'Terraform Plan'
                  inputs:
                    provider: 'azurerm'
                    command: 'plan'
                    workingDirectory: $(workingDirectory)
                    vars: |
                      {
                        "tags": ${{ convertToJson(parameters.tags) }}
                      }

  - stage: apply
    dependsOn: plan
    condition: eq('${{ parameters.Apply }}', 'true')
    displayName: 'Terraform Apply'
    jobs:
      - deployment: apply
        displayName: 'Run Terraform Apply'
        environment: DEV
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: TerraformTaskV4@4
                  displayName: 'Terraform Init'
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    workingDirectory: $(workingDirectory)

                - task: TerraformTaskV4@4
                  displayName: 'Terraform Apply'
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    workingDirectory: $(workingDirectory)
                    vars: |
                      {
                        "tags": ${{ convertToJson(parameters.tags) }}
                      }

  - stage: destroy
    dependsOn: plan
    condition: eq('${{ parameters.Destroy }}', 'true')
    displayName: 'Terraform Destroy'
    jobs:
      - deployment: destroy
        displayName: 'Run Terraform Destroy'
        environment: DEV
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: TerraformTaskV4@4
                  displayName: 'Terraform Init'
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    workingDirectory: $(workingDirectory)

                - task: TerraformTaskV4@4
                  displayName: 'Terraform Destroy'
                  inputs:
                    provider: 'azurerm'
                    command: 'destroy'
                    workingDirectory: $(workingDirectory)